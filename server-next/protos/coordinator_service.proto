syntax = "proto3";

package indexify_coordinator;

service CoordinatorService {
    rpc RegisterExecutor(RegisterExecutorRequest) returns (RegisterExecutorResponse) {}

    rpc Heartbeat(stream HeartbeatRequest) returns (stream HeartbeatResponse) {}
}

message RegisterExecutorRequest {
    string executor_id = 1;
    string addr = 2;
    string runner_name = 3;
    map<string, string> labels = 4;
}

message RegisterExecutorResponse {
    string executor_id = 1;
}

message HeartbeatRequest {
    string executor_id = 1;
    int64 pending_tasks = 2;
    uint64 max_pending_tasks = 3;
}

message HeartbeatResponse {
    string executor_id = 1;
    repeated Task tasks = 2;
}

message Task {
    string id = 1;
    string namespace = 2;
    string input_data_object_id = 3;
    string compute_graph_name = 4;
    string compute_fn_name = 5;
}

message FunctionOuputStart {
    string input_data_object_id = 1;
    string compute_graph_name = 2;
    string compute_fn_name = 3;
}

enum TaskOutcome {
    Unknown = 0;
    Success = 1;
    Failed = 2;
}